{
	"name": "DQ_PIPELINE_UIF",
	"properties": {
		"activities": [
			{
				"name": "CHECK_DQ_FILE_EXISTS_IN_ADLS",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@pipeline().parameters.adls_container",
								"type": "Expression"
							},
							"folder_name": {
								"value": "@concat(replace(pipeline().parameters.adls_folder, 'Raw', 'Refine'), formatDateTime(utcnow(),'yyyy/MM/dd/'))",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists",
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "FILTER_DQ_FILE_ADLS",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "CHECK_DQ_FILE_EXISTS_IN_ADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('CHECK_DQ_FILE_EXISTS_IN_ADLS').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@contains(item().name, split(pipeline().parameters.name,'.')[0])",
						"type": "Expression"
					}
				}
			},
			{
				"name": "FOR_EACH_DQ_FILE_ADLS",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FILTER_DQ_FILE_ADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FILTER_DQ_FILE_ADLS').output.Value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "CALL_DQ_NOTEBOOK",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": {
									"value": "@pipeline().parameters.DQNotebookPath",
									"type": "Expression"
								},
								"baseParameters": {
									"PipelineID": {
										"value": "@pipeline().parameters.PipelineID",
										"type": "Expression"
									},
									"filewithpath": {
										"value": "@concat(pipeline().parameters.adls_container, replace(pipeline().parameters.adls_folder, 'Raw', 'Refine'), formatDateTime(utcnow(),'yyyy/MM/dd/'), item().name)",
										"type": "Expression"
									}
								},
								"libraries": [
									{
										"pypi": {
											"package": "great-expectations==0.13.12"
										}
									},
									{
										"pypi": {
											"package": "snowflake-connector-python[pandas]"
										}
									}
								]
							},
							"linkedServiceName": {
								"referenceName": "LS_RGM_ADB",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Check if Error Log Folder exists",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "FOR_EACH_DQ_FILE_ADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@pipeline().parameters.adls_container",
								"type": "Expression"
							},
							"folder_name": {
								"value": "@concat(split(pipeline().parameters.adls_folder, 'Raw')[0], 'Refine/logs/DQ/',formatDateTime(utcnow(),'yyyyMMdd/'),'error_logs/')",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists",
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "If Copy Error log in SFTP",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Check if Error Log Folder exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(equals(activity('Check if Error Log Folder exists').output.exists,true), equals(split(pipeline().parameters.file_type, ',')[0], 'SFTP'))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Copy Error Logs to SFTP",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFileName": {
											"value": "@concat('*',pipeline().parameters.PipelineID,'*',split(pipeline().parameters.name,'.')[0],'*')",
											"type": "Expression"
										},
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "SftpWriteSettings",
										"maxConcurrentConnections": 2,
										"operationTimeout": "01:00:00",
										"useTempFileRename": true
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_ADLS_REFINE_DQ_ERROR_LOG",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_container",
											"type": "Expression"
										},
										"refine_path": {
											"value": "@concat(split(pipeline().parameters.adls_folder, 'Raw')[0],'Refine/logs/DQ/',formatDateTime(utcnow(),'yyyyMMdd/'),'error_logs/')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DATASET_SFTP_BINARY_FOLDER_UIF",
									"type": "DatasetReference",
									"parameters": {
										"sftp_path": {
											"value": "@concat(replace(pipeline().parameters.source_folder_path, 'Inbound', 'ErrorLog'), '/',formatDateTime(utcnow(),'yyyyMMdd/'),'/')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Send Email Alert",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Check if Error Log Folder exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Check if Error Log Folder exists').output.exists, true)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Trigger Email Alert Pipeline",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "EMAIL_ALERT_PIPELINE_UIF",
									"type": "PipelineReference"
								},
								"waitOnCompletion": false,
								"parameters": {
									"name": {
										"value": "@pipeline().parameters.name",
										"type": "Expression"
									},
									"source_folder_path": {
										"value": "@pipeline().parameters.source_folder_path",
										"type": "Expression"
									},
									"adls_container": {
										"value": "@pipeline().parameters.adls_container",
										"type": "Expression"
									},
									"adls_folder": {
										"value": "@pipeline().parameters.adls_folder",
										"type": "Expression"
									},
									"adls_arc_container": {
										"value": "@pipeline().parameters.adls_arc_container",
										"type": "Expression"
									},
									"adls_arc_folder": {
										"value": "@pipeline().parameters.adls_arc_folder",
										"type": "Expression"
									},
									"recipients": {
										"value": "@pipeline().parameters.recipients",
										"type": "Expression"
									},
									"PipelineID": {
										"value": "@pipeline().parameters.PipelineID",
										"type": "Expression"
									},
									"file_type": {
										"value": "@pipeline().parameters.file_type",
										"type": "Expression"
									},
									"Environment": {
										"value": "@pipeline().globalParameters.env",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"name": {
				"type": "string",
				"defaultValue": "Dia_Sellout.xlsx"
			},
			"source_folder_path": {
				"type": "string",
				"defaultValue": "/K-C Data Lake/POS/EMEA/Country/Spain/Inbound"
			},
			"adls_container": {
				"type": "string",
				"defaultValue": "globaldatalake"
			},
			"adls_folder": {
				"type": "string",
				"defaultValue": "/ExternalSources/RegionalDL/POS/EMEA/Spain/DIA/Raw/Data/"
			},
			"adls_arc_container": {
				"type": "string",
				"defaultValue": "globaldatalake"
			},
			"adls_arc_folder": {
				"type": "string",
				"defaultValue": "/ExternalSources/RegionalDL/POS/EMEA/Spain/DIA/Raw/archive/"
			},
			"target_table_schema": {
				"type": "string",
				"defaultValue": "STAGING_EU_POS"
			},
			"target_table": {
				"type": "string",
				"defaultValue": "RGM_EM_ES_DIA_POS"
			},
			"target_table_load": {
				"type": "string",
				"defaultValue": "DROP_CREATE"
			},
			"target_table_def": {
				"type": "string",
				"defaultValue": "\\\"ENSEÑA\\\" VARCHAR(50), \\\"AÑO\\\" VARCHAR(10), MES VARCHAR(10), ORIGEN VARCHAR(20), FAMILIA VARCHAR(40), BARCODE NUMBER(20,0), ITEM_DESCRIPTION VARCHAR(60), VENTAS VARCHAR(50), CUOTA_VENTAS VARCHAR(50), EVOL_VENTAS VARCHAR(50), UDS VARCHAR(50), CUOTA_UDS VARCHAR(50), EVOL_UDS VARCHAR(50),DESCRIPTION VARCHAR(500), AUDIT_LASTMODIFIEDTIME TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(), AUDIT_SOURCEFILENAME VARCHAR(200), AUDIT_SOURCE VARCHAR(20) DEFAULT ''FLAT FILE'', AUDIT_REGION VARCHAR(10) DEFAULT ''EU'', AUDIT_MARKET VARCHAR(10) DEFAULT ''ES'', DQ_FLAG VARCHAR(20), DQ_DESCRIPTION VARCHAR(700)"
			},
			"flow_key": {
				"type": "string",
				"defaultValue": "1"
			},
			"run_key": {
				"type": "string",
				"defaultValue": "45448"
			},
			"job_key": {
				"type": "string",
				"defaultValue": "30004"
			},
			"skip_line": {
				"type": "string",
				"defaultValue": "0"
			},
			"cdc_flag": {
				"type": "string",
				"defaultValue": "1"
			},
			"cdc_columns": {
				"type": "string",
				"defaultValue": "\\\"ENSEÑA\\\",\\\"AÑO\\\",MES,ORIGEN,BARCODE,ITEM_DESCRIPTION"
			},
			"sheet": {
				"type": "string",
				"defaultValue": "\\'Consolidado total\\'!A1"
			},
			"isNotebook": {
				"type": "string",
				"defaultValue": "1"
			},
			"notebookPath": {
				"type": "string",
				"defaultValue": "/Shared/KC-RGM/KC-DQ (1B)/KC-DQ-Runnerv2"
			},
			"isDQNotebook": {
				"type": "string",
				"defaultValue": "1"
			},
			"DQNotebookPath": {
				"type": "string",
				"defaultValue": "/Users/abhijith.m@kcc.com/KC-DQ (1B)-EMAIL ALERT/KC-DQ-Runnerv2"
			},
			"recipients": {
				"type": "string",
				"defaultValue": "abhijith.m@kcc.com"
			},
			"PipelineID": {
				"type": "string",
				"defaultValue": "35f2edaa-dc84-43e7-80d8-b500569197a0"
			},
			"Support_Team_Email": {
				"type": "string",
				"defaultValue": "DNA-AZURE-SUPPORT.Support@kcc.com"
			},
			"file_type": {
				"type": "string",
				"defaultValue": "SFTP,EXCEL"
			}
		},
		"variables": {
			"RecordCount": {
				"type": "String"
			}
		},
		"folder": {
			"name": "UIF/MAIN_PIPELINE_JOBS/FLOW"
		},
		"annotations": []
	}
}