{
	"name": "SNOWFLAKE_LOAD_EXCEL_UIF",
	"properties": {
		"activities": [
			{
				"name": "CHECK_IF_SNOWFLAKE_LOAD",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "ForEach Log Folder Path",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.target_table,'')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "EXECUTE_AUDIT_NAME_ADD",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "AUDIT_DQ_SRC_FILTER_UIF",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"name": {
										"value": "@pipeline().parameters.name",
										"type": "Expression"
									},
									"source_folder_path": {
										"value": "@pipeline().parameters.source_folder_path",
										"type": "Expression"
									},
									"adls_container": {
										"value": "@pipeline().parameters.adls_container",
										"type": "Expression"
									},
									"adls_folder": {
										"value": "@pipeline().parameters.adls_folder",
										"type": "Expression"
									},
									"adls_arc_container": {
										"value": "@pipeline().parameters.adls_arc_container",
										"type": "Expression"
									},
									"adls_arc_folder": {
										"value": "@pipeline().parameters.adls_arc_folder",
										"type": "Expression"
									},
									"target_table_schema": {
										"value": "@pipeline().parameters.target_table_schema",
										"type": "Expression"
									},
									"target_table": {
										"value": "@pipeline().parameters.target_table",
										"type": "Expression"
									},
									"target_table_load": {
										"value": "@pipeline().parameters.target_table_load",
										"type": "Expression"
									},
									"target_table_def": {
										"value": "@pipeline().parameters.target_table_def",
										"type": "Expression"
									},
									"flow_key": {
										"value": "@pipeline().parameters.flow_key",
										"type": "Expression"
									},
									"run_key": {
										"value": "@pipeline().parameters.run_key",
										"type": "Expression"
									},
									"job_key": {
										"value": "@pipeline().parameters.job_key",
										"type": "Expression"
									},
									"skip_line": {
										"value": "@pipeline().parameters.skip_line",
										"type": "Expression"
									},
									"cdc_flag": {
										"value": "@pipeline().parameters.cdc_flag",
										"type": "Expression"
									},
									"cdc_columns": {
										"value": "@pipeline().parameters.cdc_columns",
										"type": "Expression"
									},
									"sheet": {
										"value": "@pipeline().parameters.sheet",
										"type": "Expression"
									},
									"isDQNotebook": {
										"value": "@pipeline().parameters.isDQNotebook",
										"type": "Expression"
									},
									"target_table_db": {
										"value": "@pipeline().parameters.target_table_db",
										"type": "Expression"
									},
									"job_start": {
										"value": "@pipeline().parameters.job_start",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "ARCHIVE_SOURCE",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "CHECK_IF_SNOWFLAKE_LOAD",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@split(pipeline().parameters.file_type, ',')[0]",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "ND",
							"activities": [
								{
									"name": "ARCHIVE_ND_EXCEL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.source_folder_path",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@if(contains(pipeline().parameters.name,'.xlsx'),concat('*',replace(pipeline().parameters.name,'.xlsx','*.xlsx')),concat('*',replace(pipeline().parameters.name,'.xls','*.xls')))",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "FileServerWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DATASET_FILE_SYSTEM_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"folder_name": {
													"value": "@toLower('')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DATASET_FILE_SYSTEM_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"folder_name": {
													"value": "@concat(pipeline().parameters.source_folder_path, '/archive/', formatDateTime(utcNow(), 'yyyyMMdd/'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "ADLS",
							"activities": [
								{
									"name": "ARCHIVE_ADLS_EXCEL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@pipeline().parameters.source_folder_path",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@concat(pipeline().parameters.source_folder_path, 'archive/', formatDateTime(utcNow(), 'yyyy/MM/dd'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "SFTP",
							"activities": [
								{
									"name": "ARCHIVE_SFTP_EXCEL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.source_folder_path",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@if(contains(pipeline().parameters.name,'.xlsx'),concat('*',replace(pipeline().parameters.name,'.xlsx','*.xlsx')),concat('*',replace(pipeline().parameters.name,'.xls','*.xls')))",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false,
												"disableChunking": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "SftpWriteSettings",
												"operationTimeout": "01:00:00",
												"useTempFileRename": true
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DATASET_SFTP_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"sftp_path": {
													"value": "@pipeline().parameters.source_folder_path",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DATASET_SFTP_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"sftp_path": {
													"value": "@replace(pipeline().parameters.source_folder_path, 'Inbound', 'archive')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					]
				}
			},
			{
				"name": "ForEach Log Folder Path",
				"description": "Iterates over log files",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "If DQ log folder exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@createArray(concat(replace(split(pipeline().parameters.adls_folder, 'Data')[0], 'Raw', 'Refine'), 'logs/DQ/', formatDateTime(utcNow(), 'yyyyMMdd'),'/audit_logs/'),concat(replace(split(pipeline().parameters.adls_folder, 'Data')[0], 'Raw', 'Refine'), 'logs/DQ/', formatDateTime(utcNow(), 'yyyyMMdd'),'/DQ_logs/'))",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Check Log Path Exists",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_container",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "If Log Path Exists",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Check Log Path Exists",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('Check Log Path Exists').output.exists,true)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Get Log Files list",
										"type": "GetMetadata",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"dataset": {
												"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
												"type": "DatasetReference",
												"parameters": {
													"container_name": {
														"value": "@pipeline().parameters.adls_container",
														"type": "Expression"
													},
													"folder_name": {
														"value": "@item()",
														"type": "Expression"
													}
												}
											},
											"fieldList": [
												"childItems"
											],
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										}
									},
									{
										"name": "Filter Log Files",
										"description": "Filter file name based on pipeline id",
										"type": "Filter",
										"dependsOn": [
											{
												"activity": "Get Log Files list",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"items": {
												"value": "@activity('Get Log Files list').output.childitems",
												"type": "Expression"
											},
											"condition": {
												"value": "@contains(item().name,pipeline().parameters.pipelineId)",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Execute Log Ingestion Child",
										"type": "ExecutePipeline",
										"dependsOn": [
											{
												"activity": "Filter Log Files",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "LOG_INGESTION_SNOWFLAKE_CHILD_UIF",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"filelist": {
													"value": "@activity('Filter Log Files').output.Value",
													"type": "Expression"
												},
												"filepath": {
													"value": "@item()",
													"type": "Expression"
												},
												"adls_container": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Check if DQ log folder exists",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@pipeline().parameters.adls_container",
								"type": "Expression"
							},
							"folder_name": {
								"value": "@concat(replace(split(pipeline().parameters.adls_folder, 'Data')[0], 'Raw', 'Refine'), 'logs/DQ/', formatDateTime(utcNow(), 'yyyyMMdd/'))",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "If DQ log folder exists",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Check if DQ log folder exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('Check if DQ log folder exists').output.exists",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "ARCHIVE_DQ_LOGS_ADLS",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_container",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@concat(replace(split(pipeline().parameters.adls_folder, 'Data')[0], 'Raw', 'Refine'), 'logs/DQ/', formatDateTime(utcNow(), 'yyyyMMdd/'))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_container",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@concat(replace(pipeline().parameters.adls_arc_folder, 'Raw', 'Refine'), formatDateTime(utcNow(), 'yyyy-MM-ddTHH:MM'), '/logs/')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"name": {
				"type": "string",
				"defaultValue": "Auchan.xlsx"
			},
			"source_folder_path": {
				"type": "string",
				"defaultValue": "/K-C Data Lake/POS/EMEA/Country/Spain/Inbound/"
			},
			"adls_container": {
				"type": "string",
				"defaultValue": "globaldatalake"
			},
			"adls_folder": {
				"type": "string",
				"defaultValue": "/ExternalSources/RegionalDL/POS/EMEA/Spain/Auchan/Raw/Data/"
			},
			"adls_arc_container": {
				"type": "string",
				"defaultValue": "globaldatalake"
			},
			"adls_arc_folder": {
				"type": "string",
				"defaultValue": "/ExternalSources/RegionalDL/POS/EMEA/Spain/Auchan/Raw/archive/"
			},
			"target_table_schema": {
				"type": "string",
				"defaultValue": "STAGING_EU_POS"
			},
			"target_table": {
				"type": "string",
				"defaultValue": "RGM_EM_ES_AUCHAN_POS"
			},
			"target_table_load": {
				"type": "string",
				"defaultValue": "DROP_CREATE"
			},
			"target_table_def": {
				"type": "string",
				"defaultValue": "CATEGORY VARCHAR(200),SUBCATEGORY VARCHAR(200),FAMILY VARCHAR(200),TURNOVER NUMBER(38,20),TURNOVER_Y_1 NUMBER(38,20),TURNOVER_GROWTH NUMBER(38,20),QUANTITY NUMBER(38,20),QUANTITY_Y_1 NUMBER(38,20),QUANTITY_GROWTH NUMBER(38,20),AVERAGE_PRICE NUMBER(38,20),AVERAGE_PRICE_GROWTH NUMBER(38,20),NB_STORE NUMBER(38,20),DISTRIBUTION_NUMERICAL NUMBER(38,20),DISTRIBUTION_WEIGHTED NUMBER(38,20),EAN VARCHAR(200),DESCRIPTION VARCHAR(200),AUDIT_LASTMODIFIEDTIME TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),AUDIT_SOURCEFILENAME VARCHAR(200),AUDIT_SOURCE VARCHAR(20) DEFAULT ''FLAT FILE'',AUDIT_REGION VARCHAR(10) DEFAULT ''EU'',AUDIT_MARKET VARCHAR(10) DEFAULT ''ES'', DQ_FLAG VARCHAR(200),DQ_DESCRIPTION VARCHAR(1000)"
			},
			"flow_key": {
				"type": "string",
				"defaultValue": "1"
			},
			"run_key": {
				"type": "string",
				"defaultValue": "255"
			},
			"job_key": {
				"type": "string",
				"defaultValue": "17209"
			},
			"skip_line": {
				"type": "string",
				"defaultValue": "0"
			},
			"cdc_flag": {
				"type": "string",
				"defaultValue": "1"
			},
			"cdc_columns": {
				"type": "string",
				"defaultValue": "EAN,DESCRIPTION"
			},
			"sheet": {
				"type": "string",
				"defaultValue": "'Export'!A1"
			},
			"isDQNotebook": {
				"type": "string",
				"defaultValue": "1"
			},
			"target_table_db": {
				"type": "string"
			},
			"file_type": {
				"type": "string"
			},
			"pipelineId": {
				"type": "string"
			},
			"job_start": {
				"type": "string"
			}
		},
		"folder": {
			"name": "UIF/MAIN_PIPELINE_JOBS/FLOW"
		},
		"annotations": []
	}
}