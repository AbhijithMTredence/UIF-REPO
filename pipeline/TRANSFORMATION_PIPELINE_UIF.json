{
	"name": "TRANSFORMATION_PIPELINE_UIF",
	"properties": {
		"activities": [
			{
				"name": "CHECK_TRANSFORMATION_FILE_IN_ADLS",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Lookup Parameter File",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@pipeline().parameters.adls_container",
								"type": "Expression"
							},
							"folder_name": {
								"value": "@concat(pipeline().parameters.adls_folder, formatDateTime(utcnow(),'yyyy/MM/dd/'))",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists",
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "FILTER_TRANSFORMATION_FILE_ADLS",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "CHECK_TRANSFORMATION_FILE_IN_ADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('CHECK_TRANSFORMATION_FILE_IN_ADLS').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@contains(item().name, split(pipeline().parameters.name,'.')[0])",
						"type": "Expression"
					}
				}
			},
			{
				"name": "FOR_EACH_TRANSFORMATION_FILE",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FILTER_TRANSFORMATION_FILE_ADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FILTER_TRANSFORMATION_FILE_ADLS').output.Value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "CALL_TRANSFORMATION_NOTEBOOK",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": {
									"value": "@pipeline().parameters.notebookPath",
									"type": "Expression"
								},
								"baseParameters": {
									"DataFactoryName": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"FileName": {
										"value": "@item().name",
										"type": "Expression"
									},
									"PipelineID": {
										"value": "@pipeline().parameters.PipelineID",
										"type": "Expression"
									},
									"PipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"RawDirectory": {
										"value": "@concat(pipeline().parameters.adls_folder, formatDateTime(utcnow(), 'yyyy/MM/dd/'))",
										"type": "Expression"
									},
									"RefineDirectory": {
										"value": "@replace(concat(pipeline().parameters.adls_folder, formatDateTime(utcnow(), 'yyyy/MM/dd/')),'Raw','Refine')",
										"type": "Expression"
									},
									"accountname": {
										"value": "@activity('Lookup Parameter File').output.firstRow.Storage_Account_Name",
										"type": "Expression"
									},
									"adlscontainer": {
										"value": "@pipeline().parameters.adls_container",
										"type": "Expression"
									},
									"effectiveIntegrationRuntime": {
										"value": "@pipeline().parameters.Eff_Integration_Runtime",
										"type": "Expression"
									},
									"sheetname": {
										"value": "@pipeline().parameters.sheet",
										"type": "Expression"
									}
								},
								"libraries": [
									{
										"pypi": {
											"package": "great-expectations==0.13.12"
										}
									},
									{
										"pypi": {
											"package": "snowflake-connector-python[pandas]"
										}
									},
									{
										"maven": {
											"coordinates": "com.crealytics:spark-excel_2.12:0.13.7"
										}
									}
								]
							},
							"linkedServiceName": {
								"referenceName": "LS_RGM_ADB",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Lookup Parameter File",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DS_RGM_PARAM_FILE",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			}
		],
		"parameters": {
			"name": {
				"type": "string"
			},
			"source_folder_path": {
				"type": "string"
			},
			"adls_container": {
				"type": "string"
			},
			"adls_folder": {
				"type": "string"
			},
			"adls_arc_container": {
				"type": "string"
			},
			"adls_arc_folder": {
				"type": "string"
			},
			"target_table_schema": {
				"type": "string"
			},
			"target_table": {
				"type": "string"
			},
			"target_table_load": {
				"type": "string"
			},
			"target_table_def": {
				"type": "string"
			},
			"flow_key": {
				"type": "string"
			},
			"run_key": {
				"type": "string"
			},
			"job_key": {
				"type": "string"
			},
			"skip_line": {
				"type": "string"
			},
			"cdc_flag": {
				"type": "string"
			},
			"cdc_columns": {
				"type": "string"
			},
			"sheet": {
				"type": "string"
			},
			"isNotebook": {
				"type": "string"
			},
			"notebookPath": {
				"type": "string"
			},
			"isDQNotebook": {
				"type": "string"
			},
			"DQNotebookPath": {
				"type": "string"
			},
			"PipelineID": {
				"type": "string"
			},
			"Eff_Integration_Runtime": {
				"type": "string",
				"defaultValue": "test_dev"
			}
		},
		"folder": {
			"name": "UIF/MAIN_PIPELINE_JOBS/FLOW"
		},
		"annotations": []
	}
}