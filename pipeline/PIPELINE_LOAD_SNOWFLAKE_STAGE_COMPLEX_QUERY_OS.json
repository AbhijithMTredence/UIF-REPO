{
	"name": "PIPELINE_LOAD_SNOWFLAKE_STAGE_COMPLEX_QUERY_OS",
	"properties": {
		"activities": [
			{
				"name": "LOOKUP_CONFIG_FILE",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DATASET_ADLS_JSON_FILE_UIF",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@pipeline().parameters.metadata_container",
								"type": "Expression"
							},
							"folder_name": {
								"value": "@pipeline().parameters.config_folder",
								"type": "Expression"
							},
							"file_name": {
								"value": "@pipeline().parameters.config_file",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "FILTER_CONFIG",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "LOOKUP_CONFIG_FILE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LOOKUP_CONFIG_FILE').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(split(item().target_table, '.')[1], pipeline().parameters.target_table)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "SET_QUERY",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "FILTER_CONFIG",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "query_wo_run_key",
					"value": {
						"value": "@activity('FILTER_CONFIG').output.value[0].query",
						"type": "Expression"
					}
				}
			},
			{
				"name": "REPLACE_RUN_KEY",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "SET_QUERY",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "query_w_run_key",
					"value": {
						"value": "@replace(variables('query_wo_run_key'), 'RUN_KEY_PLACEHOLDER', string(pipeline().parameters.run_key))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "COPY_HANA_TO_SNOWFLAKE",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ADD_DELTA_CONDITION",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SapHanaSource",
						"query": {
							"value": "@variables('query_w_run_key')",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"sink": {
						"type": "SnowflakeSink",
						"preCopyScript": {
							"value": "TRUNCATE TABLE @{concat(pipeline().parameters.stage_schema, '.', pipeline().parameters.target_table)}",
							"type": "Expression"
						},
						"importSettings": {
							"type": "SnowflakeImportCopyCommand",
							"additionalCopyOptions": {
								"ON_ERROR": "CONTINUE"
							}
						}
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "LS_BLOB_STORAGE_UIF",
							"type": "LinkedServiceReference"
						},
						"path": "sf-staging/UIF"
					},
					"enableSkipIncompatibleRow": true
				},
				"inputs": [
					{
						"referenceName": "DATASET_SAP_HANA_SOURCE_UIF",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DATASET_SNOWFLAKE_TABLE_UIF",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": {
								"value": "@pipeline().parameters.stage_schema",
								"type": "Expression"
							},
							"table_name": {
								"value": "@pipeline().parameters.target_table",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "GET_DELTA_CONDITION",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SET_QUERY",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "CALL STAGING_GBL.SP_GET_STAGE_DELTA_CONDITION('@{activity('FILTER_CONFIG').output.value[0].source_table}', '@{pipeline().parameters.load_type}', @{pipeline().parameters.run_key}, @{pipeline().parameters.job_key},'@{activity('FILTER_CONFIG').output.value[0].target_table}')",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "SET_DELTA_CONDITION",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "COPY_HANA_TO_SNOWFLAKE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "CALL STAGING_GBL.SP_SET_STAGE_DELTA_CONDITION('@{activity('FILTER_CONFIG').output.value[0].source_table}', @{pipeline().parameters.run_key}, @{pipeline().parameters.job_key}, '@{activity('FILTER_CONFIG').output.value[0].target_table}')",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "SET_TEMP_QUERY",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "REPLACE_RUN_KEY",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "GET_DELTA_CONDITION",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "query_wo_run_key",
					"value": {
						"value": "@variables('query_w_run_key')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ADD_DELTA_CONDITION",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "SET_TEMP_QUERY",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "query_w_run_key",
					"value": {
						"value": "SELECT * FROM (@{variables('query_wo_run_key')}) WHERE @{activity('GET_DELTA_CONDITION').output.firstRow.SP_GET_STAGE_DELTA_CONDITION};",
						"type": "Expression"
					}
				}
			},
			{
				"name": "JOB_FAILURE",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "COPY_HANA_TO_SNOWFLAKE",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "CALL STAGING_GBL.SP_ERROR_LOG_ETL('@{pipeline().parameters.object_name}', @{pipeline().parameters.flow_key}, @{pipeline().parameters.job_key}, @{pipeline().parameters.run_key}, @{pipeline().parameters.run_detail_key}, '@{replace(activity('COPY_HANA_TO_SNOWFLAKE').output.errors[0].Message, '''', '')}', '');",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "FAIL_PIPELINE",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "JOB_FAILURE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": "CALL DUMMY.DUMMY",
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "GETTING ERROR FROM ERROR LOG",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "JOB_FAILURE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "SELECT ERROR_TYPE, ERROR_CODE, ERROR_STATE, ERROR_MESSAGE, IMPACTED_OBJECT, ACTUAL_ACTIVITY, INSERTED_ON_TS FROM STAGING_GBL.ERROR_LOG ORDER BY INSERTED_ON_TS DESC",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "DATASET_SNOWFLAKE_TABLE_UIF",
						"type": "DatasetReference",
						"parameters": {
							"schema_name": "STAGING_GBL",
							"table_name": "ERROR_LOG"
						}
					}
				}
			},
			{
				"name": "RESULT",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "GETTING ERROR FROM ERROR LOG",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "RESULT",
					"value": {
						"value": "<tr>\n<td>@{activity('GETTING ERROR FROM ERROR LOG').output.firstRow.ERROR_TYPE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG').output.firstRow.ERROR_CODE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG').output.firstRow.ERROR_STATE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG').output.firstRow.ERROR_MESSAGE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG').output.firstRow.IMPACTED_OBJECT}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG').output.firstRow.ACTUAL_ACTIVITY}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG').output.firstRow.INSERTED_ON_TS}</td>\n</tr>",
						"type": "Expression"
					}
				}
			},
			{
				"name": "CALL ALERT PIPELINE",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "RESULT",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "PIPELINE_SEND_ERRORLOG_RESULTS_UIF",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"BODY_CONTENT": {
							"value": "@variables('RESULT')",
							"type": "Expression"
						},
						"SUBJECT": {
							"value": "RGM_Update : (@{pipeline().globalParameters.env}) OS MASTER PIPELINE FAILED AT @{utcnow()} UTC ",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"metadata_container": {
				"type": "string"
			},
			"config_folder": {
				"type": "string"
			},
			"config_file": {
				"type": "string"
			},
			"target_table": {
				"type": "string",
				"defaultValue": "DS_CALENDAR"
			},
			"load_type": {
				"type": "string"
			},
			"run_key": {
				"type": "string"
			},
			"flow_key": {
				"type": "string"
			},
			"stage_container": {
				"type": "string",
				"defaultValue": "sf-staging"
			},
			"stage_folder": {
				"type": "string",
				"defaultValue": "staging"
			},
			"stage_schema": {
				"type": "string",
				"defaultValue": "staging"
			},
			"job_key": {
				"type": "string"
			},
			"object_name": {
				"type": "string"
			},
			"run_detail_key": {
				"type": "string"
			}
		},
		"variables": {
			"query_wo_run_key": {
				"type": "String"
			},
			"query_w_run_key": {
				"type": "String"
			},
			"RESULT": {
				"type": "String"
			}
		},
		"folder": {
			"name": "UIF/MAIN_PIPELINE_JOBS/STAGE_LOAD/SAP HANA/SNOWFLAKE/MAIN"
		},
		"annotations": [],
		"lastPublishTime": "2021-04-19T18:00:18Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}