{
	"name": "PIPELINE_TABLE_LOAD_LAUNCHER_UIF",
	"properties": {
		"activities": [
			{
				"name": "LOOKUP_CONFIG_FILE",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DATASET_ADLS_JSON_FILE_UIF",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@pipeline().parameters.container",
								"type": "Expression"
							},
							"folder_name": {
								"value": "@pipeline().parameters.folder",
								"type": "Expression"
							},
							"file_name": {
								"value": "@pipeline().parameters.file",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "FILTER_HANA",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "LOOKUP_CONFIG_FILE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LOOKUP_CONFIG_FILE').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(and(equals(item().source,'HANA'),equals(item().execute_flag,'1')), contains(pipeline().parameters.Jobs,string(item().job_key)))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "FILTER_SQL",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "LOOKUP_CONFIG_FILE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LOOKUP_CONFIG_FILE').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(and(equals(item().source,'SQL'),equals(item().execute_flag,'1')),contains(pipeline().parameters.Jobs,string(item().job_key)))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "FOREACH_HANA",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FILTER_HANA",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FILTER_HANA').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "HANA_LOAD_copy1",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PIPELINE_HANA_COUNT_UIF",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"source_table": {
										"value": "@item().source_table",
										"type": "Expression"
									},
									"filter_col": {
										"value": "@item().filter_col",
										"type": "Expression"
									},
									"adls_container": {
										"value": "@item().adls_container",
										"type": "Expression"
									},
									"adls_folder": {
										"value": "@item().adls_folder",
										"type": "Expression"
									},
									"snowflake_table": {
										"value": "@item().snowflake_table",
										"type": "Expression"
									},
									"if_delta": {
										"value": "@item().if_delta",
										"type": "Expression"
									},
									"target_table_load": {
										"value": "@item().target_table_load",
										"type": "Expression"
									},
									"snowflake_table_def": {
										"value": "@item().snowflake_table_def",
										"type": "Expression"
									},
									"flow_key": {
										"value": "@pipeline().parameters.flow_key",
										"type": "Expression"
									},
									"run_key": {
										"value": "@pipeline().parameters.run_key",
										"type": "Expression"
									},
									"job_key": {
										"value": "@item().job_key",
										"type": "Expression"
									},
									"query": {
										"value": "@item().query",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "FOREACH_SQL",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FILTER_SQL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FILTER_SQL').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "SQL_LOAD_copy1",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PIPELINE_SQL_COUNT_UIF",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"source_table": {
										"value": "@item().source_table",
										"type": "Expression"
									},
									"filter_col": {
										"value": "@item().filter_col",
										"type": "Expression"
									},
									"adls_container": {
										"value": "@item().adls_container",
										"type": "Expression"
									},
									"adls_folder": {
										"value": "@item().adls_folder",
										"type": "Expression"
									},
									"snowflake_table": {
										"value": "@item().snowflake_table",
										"type": "Expression"
									},
									"if_delta": {
										"value": "@item().if_delta",
										"type": "Expression"
									},
									"target_table_load": {
										"value": "@item().target_table_load",
										"type": "Expression"
									},
									"snowflake_table_def": {
										"value": "@item().snowflake_table_def",
										"type": "Expression"
									},
									"flow_key": {
										"value": "@pipeline().parameters.flow_key",
										"type": "Expression"
									},
									"run_key": {
										"value": "@pipeline().parameters.run_key",
										"type": "Expression"
									},
									"job_key": {
										"value": "@item().job_key",
										"type": "Expression"
									},
									"query": {
										"value": "@item().query",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"flow_key": {
				"type": "string",
				"defaultValue": "1"
			},
			"run_key": {
				"type": "string"
			},
			"Jobs": {
				"type": "string"
			},
			"container": {
				"type": "string",
				"defaultValue": "driver"
			},
			"folder": {
				"type": "string",
				"defaultValue": "elt_process"
			},
			"file": {
				"type": "string",
				"defaultValue": "config_execution_elt_rdbms.json"
			}
		},
		"variables": {
			"RESULT": {
				"type": "String"
			},
			"error_check": {
				"type": "String"
			}
		},
		"folder": {
			"name": "UIF/LAUNCHER_JOBS"
		},
		"annotations": []
	}
}