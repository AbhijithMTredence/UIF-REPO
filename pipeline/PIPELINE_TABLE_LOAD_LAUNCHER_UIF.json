{
	"name": "PIPELINE_TABLE_LOAD_LAUNCHER_UIF",
	"properties": {
		"activities": [
			{
				"name": "LOOKUP_CONFIG_FILE",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DATASET_ADLS_JSON_FILE_UIF",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "drivers/@{toLower(pipeline().globalParameters.env)}",
								"type": "Expression"
							},
							"folder_name": "config/elt_process",
							"file_name": "config_execution_elt_rdbms.json"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "FILTER_HANA",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "LOOKUP_CONFIG_FILE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LOOKUP_CONFIG_FILE').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(and(equals(item().source,'HANA'),equals(item().execute_flag,'1')), contains(pipeline().parameters.Jobs,string(item().job_key)))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "FILTER_SQL",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "LOOKUP_CONFIG_FILE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LOOKUP_CONFIG_FILE').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@and(and(equals(item().source,'SQL'),equals(item().execute_flag,'1')),contains(pipeline().parameters.Jobs,string(item().job_key)))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "FOREACH_HANA",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FILTER_HANA",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FILTER_HANA').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "JOB_START",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SnowflakeSource",
									"query": {
										"value": "CALL STAGING_GBL.SP_JOB_START(@{pipeline().parameters.run_key}, @{item().job_key}, '@{item().snowflake_table}');",
										"type": "Expression"
									},
									"exportSettings": {
										"type": "SnowflakeExportCopyCommand"
									}
								},
								"dataset": {
									"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
									"type": "DatasetReference"
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "CHECK_JOB_STATUS",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "JOB_START",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(equals(activity('JOB_START').output.firstRow.SP_JOB_START, 0))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "JOB_FAILURE",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "HANA_LOAD",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SnowflakeSource",
												"query": {
													"value": "CALL STAGING_GBL.SP_ERROR_LOG_ETL('@{item().snowflake_table}', @{pipeline().parameters.flow_key}, @{item().job_key}, @{pipeline().parameters.run_key}, @{activity('JOB_START').output.firstRow.SP_JOB_START}, 'ERROR IN HANA FILE LOAD', '');",
													"type": "Expression"
												},
												"exportSettings": {
													"type": "SnowflakeExportCopyCommand"
												}
											},
											"dataset": {
												"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
												"type": "DatasetReference"
											},
											"firstRowOnly": true
										}
									},
									{
										"name": "FAIL_PIPELINE",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "JOB_FAILURE",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SnowflakeSource",
												"query": "CALL DUMMY.DUMMY",
												"exportSettings": {
													"type": "SnowflakeExportCopyCommand"
												}
											},
											"dataset": {
												"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
												"type": "DatasetReference"
											}
										}
									},
									{
										"name": "GETTING ERROR FROM ERROR LOG",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "JOB_FAILURE",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SnowflakeSource",
												"query": {
													"value": "SELECT ERROR_TYPE, ERROR_CODE, ERROR_STATE, ERROR_MESSAGE, IMPACTED_OBJECT, ACTUAL_ACTIVITY, INSERTED_ON_TS FROM STAGING_GBL.ERROR_LOG ORDER BY INSERTED_ON_TS DESC",
													"type": "Expression"
												},
												"exportSettings": {
													"type": "SnowflakeExportCopyCommand"
												}
											},
											"dataset": {
												"referenceName": "DATASET_SNOWFLAKE_TABLE_UIF",
												"type": "DatasetReference",
												"parameters": {
													"schema_name": "STAGING_GBL",
													"table_name": "ERROR_LOG"
												}
											}
										}
									},
									{
										"name": "RESULT",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "GETTING ERROR FROM ERROR LOG",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "RESULT",
											"value": {
												"value": "<tr>\n<td>@{activity('GETTING ERROR FROM ERROR LOG').output.firstRow.ERROR_TYPE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG').output.firstRow.ERROR_CODE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG').output.firstRow.ERROR_STATE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG').output.firstRow.ERROR_MESSAGE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG').output.firstRow.IMPACTED_OBJECT}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG').output.firstRow.ACTUAL_ACTIVITY}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG').output.firstRow.INSERTED_ON_TS}</td>\n</tr>",
												"type": "Expression"
											}
										}
									},
									{
										"name": "CALL ALERT PIPELINE",
										"type": "ExecutePipeline",
										"dependsOn": [
											{
												"activity": "RESULT",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "PIPELINE_SEND_ERRORLOG_RESULTS_UIF",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"BODY_CONTENT": {
													"value": "@variables('RESULT')",
													"type": "Expression"
												},
												"SUBJECT": {
													"value": "RGM_Update : (@{pipeline().globalParameters.env}) RGM MASTER PIPELINE FAILED AT @{utcnow()} UTC ",
													"type": "Expression"
												}
											}
										}
									},
									{
										"name": "HANA_LOAD",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "PIPELINE_HANA_COUNT_UIF",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"source_table": {
													"value": "@item().source_table",
													"type": "Expression"
												},
												"filter_col": {
													"value": "@item().filter_col",
													"type": "Expression"
												},
												"adls_container": {
													"value": "@item().adls_container",
													"type": "Expression"
												},
												"adls_folder": {
													"value": "@item().adls_folder",
													"type": "Expression"
												},
												"snowflake_table": {
													"value": "@item().snowflake_table",
													"type": "Expression"
												},
												"if_delta": {
													"value": "@item().if_delta",
													"type": "Expression"
												},
												"target_table_load": {
													"value": "@item().target_table_load",
													"type": "Expression"
												},
												"snowflake_table_def": {
													"value": "@item().snowflake_table_def",
													"type": "Expression"
												},
												"flow_key": {
													"value": "@pipeline().parameters.flow_key",
													"type": "Expression"
												},
												"run_key": {
													"value": "@pipeline().parameters.run_key",
													"type": "Expression"
												},
												"job_key": {
													"value": "@item().job_key",
													"type": "Expression"
												},
												"query": {
													"value": "@item().query",
													"type": "Expression"
												}
											}
										}
									},
									{
										"name": "CHECK_ERROR",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "HANA_LOAD",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SnowflakeSource",
												"query": {
													"value": "CALL STAGING_GBL.SP_CHECK_FOR_ERROR(@{pipeline().parameters.flow_key}, @{item().job_key}, @{pipeline().parameters.run_key});",
													"type": "Expression"
												},
												"exportSettings": {
													"type": "SnowflakeExportCopyCommand"
												}
											},
											"dataset": {
												"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
												"type": "DatasetReference"
											}
										}
									},
									{
										"name": "SET_ERROR_CHECK",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "CHECK_ERROR",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "error_check",
											"value": {
												"value": "@activity('CHECK_ERROR').output.firstRow.SP_CHECK_FOR_ERROR",
												"type": "Expression"
											}
										}
									}
								]
							}
						},
						{
							"name": "SP_FAILURE_CHECK",
							"type": "Switch",
							"dependsOn": [
								{
									"activity": "CHECK_JOB_STATUS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@variables('error_check')",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "SUCCESS",
										"activities": [
											{
												"name": "JOB_END",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SnowflakeSource",
														"query": {
															"value": "CALL STAGING_GBL.SP_JOB_END(@{activity('JOB_START').output.firstRow.SP_JOB_START}, @{item().job_key}, @{pipeline().parameters.flow_key}, @{pipeline().parameters.run_key});",
															"type": "Expression"
														},
														"exportSettings": {
															"type": "SnowflakeExportCopyCommand"
														}
													},
													"dataset": {
														"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
														"type": "DatasetReference"
													},
													"firstRowOnly": true
												}
											}
										]
									},
									{
										"value": "FAIL",
										"activities": [
											{
												"name": "FAIL_PIPELINE2",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "JOB_FAILURE2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SnowflakeSource",
														"query": "CALL DUMMY.DUMMY",
														"exportSettings": {
															"type": "SnowflakeExportCopyCommand"
														}
													},
													"dataset": {
														"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
														"type": "DatasetReference"
													}
												}
											},
											{
												"name": "JOB_FAILURE2",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SnowflakeSource",
														"query": {
															"value": "CALL STAGING_GBL.SP_ERROR_LOG_ETL('@{item().snowflake_table}', @{pipeline().parameters.flow_key}, @{item().job_key}, @{pipeline().parameters.run_key}, @{activity('JOB_START').output.firstRow.SP_JOB_START}, 'Check error log table for the error message', '');",
															"type": "Expression"
														},
														"exportSettings": {
															"type": "SnowflakeExportCopyCommand"
														}
													},
													"dataset": {
														"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
														"type": "DatasetReference"
													},
													"firstRowOnly": true
												}
											},
											{
												"name": "GETTING ERROR FROM ERROR LOG2",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "JOB_FAILURE2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SnowflakeSource",
														"query": {
															"value": "SELECT ERROR_TYPE, ERROR_CODE, ERROR_STATE, ERROR_MESSAGE, IMPACTED_OBJECT, ACTUAL_ACTIVITY, INSERTED_ON_TS FROM STAGING_GBL.ERROR_LOG ORDER BY INSERTED_ON_TS DESC",
															"type": "Expression"
														},
														"exportSettings": {
															"type": "SnowflakeExportCopyCommand"
														}
													},
													"dataset": {
														"referenceName": "DATASET_SNOWFLAKE_TABLE_UIF",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "STAGING_GBL",
															"table_name": "ERROR_LOG"
														}
													}
												}
											},
											{
												"name": "RESULT2",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "GETTING ERROR FROM ERROR LOG2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "RESULT",
													"value": {
														"value": "<tr>\n<td>@{activity('GETTING ERROR FROM ERROR LOG2').output.firstRow.ERROR_TYPE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG2').output.firstRow.ERROR_CODE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG2').output.firstRow.ERROR_STATE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG2').output.firstRow.ERROR_MESSAGE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG2').output.firstRow.IMPACTED_OBJECT}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG2').output.firstRow.ACTUAL_ACTIVITY}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG2').output.firstRow.INSERTED_ON_TS}</td>\n</tr>",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CALL ALERT PIPELINE2",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "RESULT2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PIPELINE_SEND_ERRORLOG_RESULTS_UIF",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"BODY_CONTENT": {
															"value": "@variables('RESULT')",
															"type": "Expression"
														},
														"SUBJECT": {
															"value": "RGM_Update : (@{pipeline().globalParameters.env}) RGM - MASTER PIPELINE FAILED AT @{utcnow()} UTC ",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "FOREACH_SQL",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FILTER_SQL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FILTER_SQL').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "JOB_START1",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SnowflakeSource",
									"query": {
										"value": "CALL STAGING_GBL.SP_JOB_START(@{pipeline().parameters.run_key}, @{item().job_key}, '@{item().snowflake_table}');",
										"type": "Expression"
									},
									"exportSettings": {
										"type": "SnowflakeExportCopyCommand"
									}
								},
								"dataset": {
									"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
									"type": "DatasetReference"
								},
								"firstRowOnly": true
							}
						},
						{
							"name": "CHECK_JOB_STATUS1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "JOB_START1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@not(equals(activity('JOB_START1').output.firstRow.SP_JOB_START, 0))",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "JOB_FAILURE1",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "SQL_LOAD",
												"dependencyConditions": [
													"Failed"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SnowflakeSource",
												"query": {
													"value": "CALL STAGING_GBL.SP_ERROR_LOG_ETL('@{item().snowflake_table}', @{pipeline().parameters.flow_key}, @{item().job_key}, @{pipeline().parameters.run_key}, @{activity('JOB_START1').output.firstRow.SP_JOB_START}, 'ERROR IN SQL FILE LOAD', '');",
													"type": "Expression"
												},
												"exportSettings": {
													"type": "SnowflakeExportCopyCommand"
												}
											},
											"dataset": {
												"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
												"type": "DatasetReference"
											},
											"firstRowOnly": true
										}
									},
									{
										"name": "FAIL_PIPELINE1",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "JOB_FAILURE1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SnowflakeSource",
												"query": "CALL DUMMY.DUMMY",
												"exportSettings": {
													"type": "SnowflakeExportCopyCommand"
												}
											},
											"dataset": {
												"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
												"type": "DatasetReference"
											}
										}
									},
									{
										"name": "GETTING ERROR FROM ERROR LOG1",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "JOB_FAILURE1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SnowflakeSource",
												"query": {
													"value": "SELECT ERROR_TYPE, ERROR_CODE, ERROR_STATE, ERROR_MESSAGE, IMPACTED_OBJECT, ACTUAL_ACTIVITY, INSERTED_ON_TS FROM STAGING_GBL.ERROR_LOG ORDER BY INSERTED_ON_TS DESC",
													"type": "Expression"
												},
												"exportSettings": {
													"type": "SnowflakeExportCopyCommand"
												}
											},
											"dataset": {
												"referenceName": "DATASET_SNOWFLAKE_TABLE_UIF",
												"type": "DatasetReference",
												"parameters": {
													"schema_name": "STAGING_GBL",
													"table_name": "ERROR_LOG"
												}
											}
										}
									},
									{
										"name": "RESULT1",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "GETTING ERROR FROM ERROR LOG1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "RESULT",
											"value": {
												"value": "<tr>\n<td>@{activity('GETTING ERROR FROM ERROR LOG1').output.firstRow.ERROR_TYPE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG1').output.firstRow.ERROR_CODE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG1').output.firstRow.ERROR_STATE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG1').output.firstRow.ERROR_MESSAGE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG1').output.firstRow.IMPACTED_OBJECT}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG1').output.firstRow.ACTUAL_ACTIVITY}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG1').output.firstRow.INSERTED_ON_TS}</td>\n</tr>",
												"type": "Expression"
											}
										}
									},
									{
										"name": "CALL ALERT PIPELINE1",
										"type": "ExecutePipeline",
										"dependsOn": [
											{
												"activity": "RESULT1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "PIPELINE_SEND_ERRORLOG_RESULTS_UIF",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"BODY_CONTENT": {
													"value": "@variables('RESULT')",
													"type": "Expression"
												},
												"SUBJECT": {
													"value": "RGM_Update : (@{pipeline().globalParameters.env}) RGM MASTER PIPELINE FAILED AT @{utcnow()} UTC ",
													"type": "Expression"
												}
											}
										}
									},
									{
										"name": "SQL_LOAD",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "PIPELINE_SQL_COUNT_UIF",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"source_table": {
													"value": "@item().source_table",
													"type": "Expression"
												},
												"filter_col": {
													"value": "@item().filter_col",
													"type": "Expression"
												},
												"adls_container": {
													"value": "@item().adls_container",
													"type": "Expression"
												},
												"adls_folder": {
													"value": "@item().adls_folder",
													"type": "Expression"
												},
												"snowflake_table": {
													"value": "@item().snowflake_table",
													"type": "Expression"
												},
												"if_delta": {
													"value": "@item().if_delta",
													"type": "Expression"
												},
												"target_table_load": {
													"value": "@item().target_table_load",
													"type": "Expression"
												},
												"snowflake_table_def": {
													"value": "@item().snowflake_table_def",
													"type": "Expression"
												},
												"flow_key": {
													"value": "@pipeline().parameters.flow_key",
													"type": "Expression"
												},
												"run_key": {
													"value": "@pipeline().parameters.run_key",
													"type": "Expression"
												},
												"job_key": {
													"value": "@item().job_key",
													"type": "Expression"
												},
												"query": {
													"value": "@item().query",
													"type": "Expression"
												}
											}
										}
									},
									{
										"name": "SET_ERROR_CHECK1",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "CHECK_ERROR1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "error_check",
											"value": {
												"value": "@activity('CHECK_ERROR1').output.firstRow.SP_CHECK_FOR_ERROR",
												"type": "Expression"
											}
										}
									},
									{
										"name": "CHECK_ERROR1",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "SQL_LOAD",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SnowflakeSource",
												"query": {
													"value": "CALL STAGING_GBL.SP_CHECK_FOR_ERROR(@{pipeline().parameters.flow_key}, @{item().job_key}, @{pipeline().parameters.run_key});",
													"type": "Expression"
												},
												"exportSettings": {
													"type": "SnowflakeExportCopyCommand"
												}
											},
											"dataset": {
												"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
												"type": "DatasetReference"
											}
										}
									}
								]
							}
						},
						{
							"name": "SP_FAILURE_CHECK1",
							"type": "Switch",
							"dependsOn": [
								{
									"activity": "CHECK_JOB_STATUS1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@variables('error_check')",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "SUCCESS",
										"activities": [
											{
												"name": "JOB_END1",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SnowflakeSource",
														"query": {
															"value": "CALL STAGING_GBL.SP_JOB_END(@{activity('JOB_START1').output.firstRow.SP_JOB_START}, @{item().job_key}, @{pipeline().parameters.flow_key}, @{pipeline().parameters.run_key});",
															"type": "Expression"
														},
														"exportSettings": {
															"type": "SnowflakeExportCopyCommand"
														}
													},
													"dataset": {
														"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
														"type": "DatasetReference"
													},
													"firstRowOnly": true
												}
											}
										]
									},
									{
										"value": "FAIL",
										"activities": [
											{
												"name": "FAIL_PIPELINE3",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "JOB_FAILURE3",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SnowflakeSource",
														"query": "CALL DUMMY.DUMMY",
														"exportSettings": {
															"type": "SnowflakeExportCopyCommand"
														}
													},
													"dataset": {
														"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
														"type": "DatasetReference"
													}
												}
											},
											{
												"name": "JOB_FAILURE3",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SnowflakeSource",
														"query": {
															"value": "CALL STAGING_GBL.SP_ERROR_LOG_ETL('@{item().snowflake_table}', @{pipeline().parameters.flow_key}, @{item().job_key}, @{pipeline().parameters.run_key}, @{activity('JOB_START1').output.firstRow.SP_JOB_START}, 'Check error log table for the error message', '');",
															"type": "Expression"
														},
														"exportSettings": {
															"type": "SnowflakeExportCopyCommand"
														}
													},
													"dataset": {
														"referenceName": "DATASET_SNOWFLAKE_STORED_PROC_UIF",
														"type": "DatasetReference"
													},
													"firstRowOnly": true
												}
											},
											{
												"name": "GETTING ERROR FROM ERROR LOG3",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "JOB_FAILURE3",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SnowflakeSource",
														"query": {
															"value": "SELECT ERROR_TYPE, ERROR_CODE, ERROR_STATE, ERROR_MESSAGE, IMPACTED_OBJECT, ACTUAL_ACTIVITY, INSERTED_ON_TS FROM STAGING_GBL.ERROR_LOG ORDER BY INSERTED_ON_TS DESC",
															"type": "Expression"
														},
														"exportSettings": {
															"type": "SnowflakeExportCopyCommand"
														}
													},
													"dataset": {
														"referenceName": "DATASET_SNOWFLAKE_TABLE_UIF",
														"type": "DatasetReference",
														"parameters": {
															"schema_name": "STAGING_GBL",
															"table_name": "ERROR_LOG"
														}
													}
												}
											},
											{
												"name": "RESULT3",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "GETTING ERROR FROM ERROR LOG3",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "RESULT",
													"value": {
														"value": "<tr>\n<td>@{activity('GETTING ERROR FROM ERROR LOG3').output.firstRow.ERROR_TYPE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG3').output.firstRow.ERROR_CODE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG3').output.firstRow.ERROR_STATE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG3').output.firstRow.ERROR_MESSAGE}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG3').output.firstRow.IMPACTED_OBJECT}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG3').output.firstRow.ACTUAL_ACTIVITY}</td>\n<td>@{activity('GETTING ERROR FROM ERROR LOG3').output.firstRow.INSERTED_ON_TS}</td>\n</tr>",
														"type": "Expression"
													}
												}
											},
											{
												"name": "CALL ALERT PIPELINE3",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "RESULT3",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "PIPELINE_SEND_ERRORLOG_RESULTS_UIF",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"BODY_CONTENT": {
															"value": "@variables('RESULT')",
															"type": "Expression"
														},
														"SUBJECT": {
															"value": "RGM_Update : (@{pipeline().globalParameters.env}) RGM - MASTER PIPELINE FAILED AT @{utcnow()} UTC ",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"flow_key": {
				"type": "string",
				"defaultValue": "1"
			},
			"run_key": {
				"type": "string"
			},
			"Jobs": {
				"type": "string"
			}
		},
		"variables": {
			"RESULT": {
				"type": "String"
			},
			"error_check": {
				"type": "String"
			}
		},
		"folder": {
			"name": "UIF/LAUNCHER_JOBS"
		},
		"annotations": []
	}
}