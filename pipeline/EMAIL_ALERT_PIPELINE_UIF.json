{
	"name": "EMAIL_ALERT_PIPELINE_UIF",
	"properties": {
		"activities": [
			{
				"name": "Send Email Alert",
				"type": "Switch",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@split(pipeline().parameters.file_type,',')[0]",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "ND",
							"activities": [
								{
									"name": "Filter Error Log Summary File ND",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Check if Error Log Folder exists ND",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Check if Error Log Folder exists ND').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name, 'ERROR_LOG_SUMMARY_')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Filter Merged Error Log File ND",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Check if Error Log Folder exists ND",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Check if Error Log Folder exists ND').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name, 'InvalidRecords_')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Get Error Log Summary File Content ND",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Filter Error Log Summary File ND",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"dataset": {
											"referenceName": "GET_FILE_CONTENT_UIF",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												},
												"refine_path": {
													"value": "@concat(split(pipeline().parameters.adls_folder, 'Raw')[0],'Refine/logs/DQ/',formatDateTime(utcnow(),'yyyyMMdd/'),'error_logs/')",
													"type": "Expression"
												},
												"file_name": {
													"value": "@activity('Filter Error Log Summary File ND').output.value[0].name",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Send Email Alert ND",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Filter File Name ND",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Get Error Log Summary File Content ND",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Filter Merged Error Log File ND",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://prod-17.northcentralus.logic.azure.com:443/workflows/e5775449538d4ad79ce81c78efc0dc6a/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=CUUliGZEt1JfEuB3oZj2yFLTYZoO_lbBLYtH75eNctM",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"Summary_File_Content": "@{activity('Get Error Log Summary File Content ND').output.value}",
											"File_Name": "@{activity('Filter File Name ND').output.value[0].name}",
											"SFTP_Location": "@{pipeline().parameters.source_folder_path}",
											"File_Subject": "@{concat(split(pipeline().parameters.adls_folder, '/')[3], ' ', split(pipeline().parameters.adls_folder, '/')[4], ' ', split(pipeline().parameters.adls_folder, '/')[5])}",
											"File_Details": "@{concat(split(pipeline().parameters.adls_folder, '/')[4],' ',split(pipeline().parameters.adls_folder, '/')[5])}",
											"Support_Team_Email": "@{pipeline().parameters.Support_Team_Email}",
											"To": "@{pipeline().parameters.recipients}",
											"Environment": "@{pipeline().parameters.Environment}"
										}
									}
								},
								{
									"name": "Check Error Log File Name ND",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "Check if Error Log Folder exists ND",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DATASET_FILE_SYSTEM_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"folder_name": {
													"value": "@pipeline().parameters.source_folder_path",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "FileServerReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "Filter File Name ND",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Check Error Log File Name ND",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Check Error Log File Name ND').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name, split(pipeline().parameters.name, '.')[0])",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Check if Error Log Folder exists ND",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@concat(split(pipeline().parameters.adls_folder, 'Raw')[0], 'Refine/logs/DQ/',formatDateTime(utcnow(),'yyyyMMdd/'),'error_logs/')",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists",
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								}
							]
						},
						{
							"value": "ADLS",
							"activities": [
								{
									"name": "Filter Error Log Summary File ADLS",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Check if Error Log Folder exists ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Check if Error Log Folder exists ADLS').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name, 'ERROR_LOG_SUMMARY_')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Filter Merged Error Log File ADLS",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Check if Error Log Folder exists ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Check if Error Log Folder exists ADLS').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name, 'InvalidRecords_')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Get Error Log Summary File Content ADLS",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Filter Error Log Summary File ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"dataset": {
											"referenceName": "GET_FILE_CONTENT_UIF",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												},
												"refine_path": {
													"value": "@concat(split(pipeline().parameters.adls_folder, 'Raw')[0],'Refine/logs/DQ/',formatDateTime(utcnow(),'yyyyMMdd/'),'error_logs/')",
													"type": "Expression"
												},
												"file_name": {
													"value": "@activity('Filter Error Log Summary File ADLS').output.value[0].name",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Send Email Alert ADLS",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Error Log Summary File Content ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Filter Merged Error Log File ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Filter File Name ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://prod-17.northcentralus.logic.azure.com:443/workflows/e5775449538d4ad79ce81c78efc0dc6a/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=CUUliGZEt1JfEuB3oZj2yFLTYZoO_lbBLYtH75eNctM",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"Summary_File_Content": "@{activity('Get Error Log Summary File Content ADLS').output.value}",
											"File_Name": "@{activity('Filter File Name ADLS').output.value[0].name}",
											"SFTP_Location": "@{pipeline().parameters.adls_folder}",
											"File_Subject": "@{concat(split(pipeline().parameters.adls_folder, '/')[3], ' ', split(pipeline().parameters.adls_folder, '/')[4], ' ', split(pipeline().parameters.adls_folder, '/')[5])}",
											"File_Details": "@{concat(split(pipeline().parameters.adls_folder, '/')[4],' ',split(pipeline().parameters.adls_folder, '/')[5])}",
											"Support_Team_Email": "@{pipeline().parameters.Support_Team_Email}",
											"To": "@{pipeline().parameters.recipients}",
											"Environment": "@{pipeline().parameters.Environment}"
										}
									}
								},
								{
									"name": "Check Error Log File Name ADLS",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "Check if Error Log Folder exists ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@pipeline().parameters.source_folder_path",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "Filter File Name ADLS",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Check Error Log File Name ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Check Error Log File Name ADLS').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name, split(pipeline().parameters.name, '.')[0])",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Check if Error Log Folder exists ADLS",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@concat(split(pipeline().parameters.adls_folder, 'Raw')[0], 'Refine/logs/DQ/',formatDateTime(utcnow(),'yyyyMMdd/'),'error_logs/')",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists",
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								}
							]
						},
						{
							"value": "SFTP",
							"activities": [
								{
									"name": "Filter Error Log Summary File SFTP",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Check if Error Log Folder exists SFTP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Check if Error Log Folder exists SFTP').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name, 'ERROR_LOG_SUMMARY_')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Filter Merged Error Log File SFTP",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Check if Error Log Folder exists SFTP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Check if Error Log Folder exists SFTP').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name, 'InvalidRecords_')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Get Error Log Summary File Content SFTP",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Filter Error Log Summary File SFTP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"dataset": {
											"referenceName": "GET_FILE_CONTENT_UIF",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												},
												"refine_path": {
													"value": "@concat(split(pipeline().parameters.adls_folder, 'Raw')[0],'Refine/logs/DQ/',formatDateTime(utcnow(),'yyyyMMdd/'),'error_logs/')",
													"type": "Expression"
												},
												"file_name": {
													"value": "@activity('Filter Error Log Summary File SFTP').output.value[0].name",
													"type": "Expression"
												}
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Send Email Alert SFTP",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get Error Log Summary File Content SFTP",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Filter File Name SFTP",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Filter Merged Error Log File SFTP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://prod-17.northcentralus.logic.azure.com:443/workflows/e5775449538d4ad79ce81c78efc0dc6a/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=CUUliGZEt1JfEuB3oZj2yFLTYZoO_lbBLYtH75eNctM",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json"
										},
										"body": {
											"Summary_File_Content": "@{activity('Get Error Log Summary File Content SFTP').output.value}",
											"File_Name": "@{activity('Filter File Name SFTP').output.value[0].name}",
											"SFTP_Location": "@{concat('//', 'd.dt.kcmkt.com/dt9NGS.kcmkt.com', replace(pipeline().parameters.source_folder_path, 'Inbound', 'ErrorLog'), formatDateTime(utcNow(), 'yyyyMMdd/'), activity('Filter Merged Error Log File SFTP').output.value[0].name)}",
											"File_Subject": "@{concat(split(pipeline().parameters.adls_folder, '/')[3], ' ', split(pipeline().parameters.adls_folder, '/')[4], ' ', split(pipeline().parameters.adls_folder, '/')[5])}",
											"File_Details": "@{concat(split(pipeline().parameters.adls_folder, '/')[4],' ',split(pipeline().parameters.adls_folder, '/')[5])}",
											"Support_Team_Email": "@{pipeline().parameters.Support_Team_Email}",
											"To": "@{pipeline().parameters.recipients}",
											"Environment": "@{pipeline().parameters.Environment}"
										}
									}
								},
								{
									"name": "Check Error Log File Name SFTP",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "Check if Error Log Folder exists SFTP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DATASET_SFTP_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"sftp_path": {
													"value": "@pipeline().parameters.source_folder_path",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false,
											"disableChunking": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "Filter File Name SFTP",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "Check Error Log File Name SFTP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('Check Error Log File Name SFTP').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name, split(pipeline().parameters.name, '.')[0])",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Check if Error Log Folder exists SFTP",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@concat(split(pipeline().parameters.adls_folder, 'Raw')[0], 'Refine/logs/DQ/',formatDateTime(utcnow(),'yyyyMMdd/'),'error_logs/')",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists",
											"childItems"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"name": {
				"type": "string"
			},
			"source_folder_path": {
				"type": "string"
			},
			"adls_container": {
				"type": "string"
			},
			"adls_folder": {
				"type": "string"
			},
			"adls_arc_container": {
				"type": "string"
			},
			"adls_arc_folder": {
				"type": "string"
			},
			"recipients": {
				"type": "string"
			},
			"PipelineID": {
				"type": "string"
			},
			"Support_Team_Email": {
				"type": "string",
				"defaultValue": "DNA-AZURE-SUPPORT.Support@kcc.com"
			},
			"file_type": {
				"type": "string"
			},
			"Environment": {
				"type": "string"
			}
		},
		"variables": {
			"Record_Count": {
				"type": "String"
			}
		},
		"folder": {
			"name": "UIF/MAIN_PIPELINE_JOBS"
		},
		"annotations": []
	}
}