{
	"name": "PIPELINE_FILE_LOAD_PARQUET_CHILD_UIF",
	"properties": {
		"activities": [
			{
				"name": "PARQUET_COPY_ACTIVITY",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "SET COUNT_ADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greaterOrEquals(int(variables('count')),1)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "ALERT_FILE_MISSING",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PIPELINE_SEND_STATUS_MAIL_UIF",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"BODY_CONTENT": {
										"value": "LATEST PARQUET FILE MISSING - @{pipeline().parameters.name}",
										"type": "Expression"
									},
									"SUBJECT": {
										"value": "RGM_Update : (@{pipeline().globalParameters.env}) RGM MASTER PIPELINE UPDATED AT @{utcnow()} UTC ",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "ACTIVITY_LOG",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "ALERT_FILE_MISSING",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SnowflakeSource",
									"query": {
										"value": "CALL STAGING_GBL.SP_ACTIVITY_LOG(21,'@{pipeline().parameters.name}','FILE MISSING',@{pipeline().parameters.run_key},@{pipeline().parameters.job_key},@{pipeline().parameters.flow_key})",
										"type": "Expression"
									},
									"exportSettings": {
										"type": "SnowflakeExportCopyCommand"
									}
								},
								"dataset": {
									"referenceName": "DATASET_SNOWFLAKE_TABLE_UIF",
									"type": "DatasetReference",
									"parameters": {
										"schema_name": "STAGING_GBL",
										"table_name": "SP_ACTIVITY_LOG"
									}
								},
								"firstRowOnly": false
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "COPY_ADLS_PARQUET_ADLS",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"wildcardFileName": {
											"value": "@concat(split(pipeline().parameters.name, '.')[0],'*')",
											"type": "Expression"
										},
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_container",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@pipeline().parameters.source_folder_path",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_container",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@concat(pipeline().parameters.adls_folder,'/', formatDateTime(utcnow(), 'yyyy/MM/dd'))",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "COPY_ADLS_ARC_PARQUET_RAW",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "COPY_ADLS_PARQUET_ADLS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFileName": {
											"value": "@replace(pipeline().parameters.name,'.parquet','*.parquet*')\n",
											"type": "Expression"
										},
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_container",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@concat(pipeline().parameters.adls_folder,'/', formatDateTime(utcNow(), 'yyyy/MM/dd'))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_arc_container",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@concat(pipeline().parameters.adls_arc_folder, '/',formatDateTime(utcNow(), 'yyyy-MM-ddTHH:MM'))",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "COPY_ADLS_ARC_PARQUET_REFINE",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "COPY_ADLS_PARQUET_ADLS",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFileName": {
											"value": "@replace(pipeline().parameters.name,'.parquet','*.parquet')",
											"type": "Expression"
										},
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_arc_container",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@concat(pipeline().parameters.adls_folder,'/', formatDateTime(utcnow(), 'yyyy/MM/dd'))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_arc_container",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@concat(replace(pipeline().parameters.adls_arc_folder,'Raw','Refine'),'/', formatDateTime(utcNow(), 'yyyy/MM/dd'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "CHECK_IF_FILE_EXISTS_ADLS",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
						"type": "DatasetReference",
						"parameters": {
							"container_name": {
								"value": "@pipeline().parameters.adls_container",
								"type": "Expression"
							},
							"folder_name": {
								"value": "@pipeline().parameters.source_folder_path",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems",
						"exists"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "FILTER_FILE_ADLS",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "CHECK_IF_FILE_EXISTS_ADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('CHECK_IF_FILE_EXISTS_ADLS').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@contains(item().name, split(pipeline().parameters.name,'.')[0])",
						"type": "Expression"
					}
				}
			},
			{
				"name": "SET COUNT_ADLS",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "FILTER_FILE_ADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "count",
					"value": {
						"value": "@string(activity('FILTER_FILE_ADLS').output.FilteredItemsCount)",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"name": {
				"type": "string"
			},
			"source_folder_path": {
				"type": "string"
			},
			"adls_container": {
				"type": "string"
			},
			"adls_folder": {
				"type": "string"
			},
			"adls_arc_container": {
				"type": "string"
			},
			"adls_arc_folder": {
				"type": "string"
			},
			"target_table_schema": {
				"type": "string"
			},
			"target_table": {
				"type": "string"
			},
			"target_table_load": {
				"type": "string"
			},
			"target_table_def": {
				"type": "string"
			},
			"flow_key": {
				"type": "string"
			},
			"run_key": {
				"type": "string"
			},
			"job_key": {
				"type": "string"
			},
			"skip_line": {
				"type": "string"
			},
			"cdc_flag": {
				"type": "string"
			},
			"cdc_columns": {
				"type": "string"
			},
			"isNotebook": {
				"type": "string"
			},
			"notebookPath": {
				"type": "string"
			},
			"isDQNotebook": {
				"type": "string"
			},
			"DQNotebookPath": {
				"type": "string"
			},
			"file_type": {
				"type": "string"
			},
			"sheet": {
				"type": "string"
			},
			"recipients": {
				"type": "string"
			},
			"PipelineID": {
				"type": "string"
			},
			"target_table_db": {
				"type": "string"
			}
		},
		"variables": {
			"count": {
				"type": "String"
			}
		},
		"folder": {
			"name": "UIF/FILE_LOAD_FLOW"
		},
		"annotations": []
	}
}