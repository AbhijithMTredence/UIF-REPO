{
	"name": "COPY_FROM_SOURCE_EXCEL_UIF",
	"properties": {
		"activities": [
			{
				"name": "COPY_TO_ADLS",
				"type": "Switch",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@split(pipeline().parameters.file_type,',')[0]",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "ND",
							"activities": [
								{
									"name": "COPY_FS_ADLS_EXCEL_ND",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": false,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.source_folder_path",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@if(contains(pipeline().parameters.name,'.xlsx'),concat('*',replace(pipeline().parameters.name,'.xlsx','*.xlsx')),concat('*',replace(pipeline().parameters.name,'.xlsm','*.xlsm')))",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DATASET_FILE_SYSTEM_BINARY_FILE_UIF",
											"type": "DatasetReference",
											"parameters": {
												"folder_name": {
													"value": "@toLower('')",
													"type": "Expression"
												},
												"file_name": {
													"value": "@toLower('')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@concat(pipeline().parameters.adls_folder, formatDateTime(utcnow(), 'yyyy/MM/dd'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "ADLS",
							"activities": [
								{
									"name": "COPY_FS_ADLS_EXCEL_ADLS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@if(contains(pipeline().parameters.name, '.xl'), replace(pipeline().parameters.name, '.xl', '*.xl*'), '')",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@pipeline().parameters.source_folder_path",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@concat(pipeline().parameters.adls_folder, formatDateTime(utcNow(), 'yyyy/MM/dd'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						},
						{
							"value": "SFTP",
							"activities": [
								{
									"name": "COPY_FS_ADLS_EXCEL_SFTP",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "SftpReadSettings",
												"recursive": false,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.source_folder_path",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@if(contains(pipeline().parameters.name,'.xlsx'),concat('*',replace(pipeline().parameters.name,'.xlsx','*.xlsx')),concat('*',replace(pipeline().parameters.name,'.xls','*.xls')))",
													"type": "Expression"
												},
												"deleteFilesAfterCompletion": false,
												"disableChunking": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DATASET_SFTP_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"sftp_path": {
													"value": "@pipeline().parameters.source_folder_path",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@concat(pipeline().parameters.adls_folder, formatDateTime(utcnow(),'yyyy/MM/dd/'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"name": {
				"type": "string"
			},
			"source_folder_path": {
				"type": "string"
			},
			"adls_container": {
				"type": "string"
			},
			"adls_folder": {
				"type": "string"
			},
			"adls_arc_container": {
				"type": "string"
			},
			"adls_arc_folder": {
				"type": "string"
			},
			"target_table_schema": {
				"type": "string"
			},
			"target_table": {
				"type": "string"
			},
			"target_table_load": {
				"type": "string"
			},
			"target_table_def": {
				"type": "string"
			},
			"flow_key": {
				"type": "string"
			},
			"run_key": {
				"type": "string"
			},
			"job_key": {
				"type": "string"
			},
			"skip_line": {
				"type": "string"
			},
			"cdc_flag": {
				"type": "string"
			},
			"cdc_columns": {
				"type": "string"
			},
			"isNotebook": {
				"type": "string"
			},
			"notebookPath": {
				"type": "string"
			},
			"sheet": {
				"type": "string"
			},
			"file_type": {
				"type": "string"
			}
		},
		"folder": {
			"name": "UIF/MAIN_PIPELINE_JOBS/FLOW"
		},
		"annotations": []
	}
}