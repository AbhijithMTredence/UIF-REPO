{
	"name": "PIPELINE_FILE_LOAD_CSV_CHILD_UIF",
	"properties": {
		"activities": [
			{
				"name": "CSV_COPY_ACTIVITY",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "SWITCH_SOURCE",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greaterOrEquals(int(variables('count')),1)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "ALERT_FILE_MISSING",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PIPELINE_SEND_STATUS_MAIL_UIF",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"BODY_CONTENT": {
										"value": "LATEST CSV FILE MISSING - @{pipeline().parameters.name}",
										"type": "Expression"
									},
									"SUBJECT": {
										"value": "RGM_Update : (@{pipeline().globalParameters.env}) RGM MASTER PIPELINE UPDATE AT @{utcnow()} UTC ",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "ACTIVITY_LOG",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "ALERT_FILE_MISSING",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SnowflakeSource",
									"query": {
										"value": "CALL STAGING_GBL.SP_ACTIVITY_LOG(21,'@{pipeline().parameters.name}','FILE MISSING',@{pipeline().parameters.run_key},@{pipeline().parameters.job_key},@{pipeline().parameters.flow_key})",
										"type": "Expression"
									},
									"exportSettings": {
										"type": "SnowflakeExportCopyCommand"
									}
								},
								"dataset": {
									"referenceName": "DATASET_SNOWFLAKE_TABLE_UIF",
									"type": "DatasetReference",
									"parameters": {
										"schema_name": "STAGING_GBL",
										"table_name": "SP_ACTIVITY_LOG"
									}
								},
								"firstRowOnly": false
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "COPY_ADLS_ARC_CSV_RAW",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "CHECK_NOTEBOOK_FLAG",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFileName": {
											"value": "@replace(pipeline().parameters.name,'.csv','*.csv')",
											"type": "Expression"
										},
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_container",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@concat(pipeline().parameters.adls_folder, formatDateTime(utcNow(), 'yyyy/MM/dd'))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_arc_container",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@concat(pipeline().parameters.adls_arc_folder, formatDateTime(utcNow(), 'yyyy-MM-ddTHH:MM'))",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "LOAD_INTO_SNOWFLAKE",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "COPY_ADLS_ARC_CSV_RAW",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "COPY_ADLS_ARC_CSV_REFINE",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "SNOWFLAKE_LOAD_CSV_UIF",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"name": {
										"value": "@pipeline().parameters.name",
										"type": "Expression"
									},
									"source_folder_path": {
										"value": "@pipeline().parameters.source_folder_path",
										"type": "Expression"
									},
									"adls_container": {
										"value": "@pipeline().parameters.adls_container",
										"type": "Expression"
									},
									"adls_folder": {
										"value": "@pipeline().parameters.adls_folder",
										"type": "Expression"
									},
									"adls_arc_container": {
										"value": "@pipeline().parameters.adls_arc_container",
										"type": "Expression"
									},
									"adls_arc_folder": {
										"value": "@pipeline().parameters.adls_arc_folder",
										"type": "Expression"
									},
									"target_table_schema": {
										"value": "@pipeline().parameters.target_table_schema",
										"type": "Expression"
									},
									"target_table": {
										"value": "@pipeline().parameters.target_table",
										"type": "Expression"
									},
									"target_table_load": {
										"value": "@pipeline().parameters.target_table_load",
										"type": "Expression"
									},
									"target_table_def": {
										"value": "@pipeline().parameters.target_table_def",
										"type": "Expression"
									},
									"flow_key": {
										"value": "@pipeline().parameters.flow_key",
										"type": "Expression"
									},
									"run_key": {
										"value": "@pipeline().parameters.run_key",
										"type": "Expression"
									},
									"job_key": {
										"value": "@pipeline().parameters.job_key",
										"type": "Expression"
									},
									"skip_line": {
										"value": "@pipeline().parameters.skip_line",
										"type": "Expression"
									},
									"cdc_flag": {
										"value": "@pipeline().parameters.cdc_flag",
										"type": "Expression"
									},
									"cdc_columns": {
										"value": "@pipeline().parameters.cdc_columns",
										"type": "Expression"
									},
									"isDQNotebook": {
										"value": "@pipeline().parameters.isDQNotebook",
										"type": "Expression"
									},
									"target_table_db": {
										"value": "@pipeline().parameters.target_table_db",
										"type": "Expression"
									},
									"file_type": {
										"value": "@pipeline().parameters.file_type",
										"type": "Expression"
									},
									"pipelineId": {
										"value": "@pipeline().parameters.PipelineID",
										"type": "Expression"
									},
									"job_start": {
										"value": "@pipeline().parameters.job_start",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "CHECK_NOTEBOOK_FLAG",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "COPY_FROM_SOURCE",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "CHECK_NOTEBOOK_FLAG_UIF",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"name": {
										"value": "@pipeline().parameters.name",
										"type": "Expression"
									},
									"source_folder_path": {
										"value": "@pipeline().parameters.source_folder_path",
										"type": "Expression"
									},
									"adls_container": {
										"value": "@pipeline().parameters.adls_container",
										"type": "Expression"
									},
									"adls_folder": {
										"value": "@pipeline().parameters.adls_folder",
										"type": "Expression"
									},
									"adls_arc_container": {
										"value": "@pipeline().parameters.adls_arc_container",
										"type": "Expression"
									},
									"adls_arc_folder": {
										"value": "@pipeline().parameters.adls_arc_folder",
										"type": "Expression"
									},
									"target_table_schema": {
										"value": "@pipeline().parameters.target_table_schema",
										"type": "Expression"
									},
									"target_table": {
										"value": "@pipeline().parameters.target_table",
										"type": "Expression"
									},
									"target_table_load": {
										"value": "@pipeline().parameters.target_table_load",
										"type": "Expression"
									},
									"target_table_def": {
										"value": "@pipeline().parameters.target_table_def",
										"type": "Expression"
									},
									"flow_key": {
										"value": "@pipeline().parameters.flow_key",
										"type": "Expression"
									},
									"run_key": {
										"value": "@pipeline().parameters.run_key",
										"type": "Expression"
									},
									"job_key": {
										"value": "@pipeline().parameters.job_key",
										"type": "Expression"
									},
									"skip_line": {
										"value": "@pipeline().parameters.skip_line",
										"type": "Expression"
									},
									"cdc_flag": {
										"value": "@pipeline().parameters.cdc_flag",
										"type": "Expression"
									},
									"cdc_columns": {
										"value": "@pipeline().parameters.cdc_columns",
										"type": "Expression"
									},
									"sheet": {
										"value": "@pipeline().parameters.sheet",
										"type": "Expression"
									},
									"isNotebook": {
										"value": "@pipeline().parameters.isNotebook",
										"type": "Expression"
									},
									"notebookPath": {
										"value": "@pipeline().parameters.notebookPath",
										"type": "Expression"
									},
									"isDQNotebook": {
										"value": "@pipeline().parameters.isDQNotebook",
										"type": "Expression"
									},
									"DQNotebookPath": {
										"value": "@pipeline().parameters.DQNotebookPath",
										"type": "Expression"
									},
									"recipients": {
										"value": "@pipeline().parameters.recipients",
										"type": "Expression"
									},
									"PipelineID": {
										"value": "@pipeline().parameters.PipelineID",
										"type": "Expression"
									},
									"file_type": {
										"value": "@pipeline().parameters.file_type",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "COPY_FROM_SOURCE",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "COPY_FROM_SOURCE_UIF",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"name": {
										"value": "@pipeline().parameters.name",
										"type": "Expression"
									},
									"source_folder_path": {
										"value": "@pipeline().parameters.source_folder_path",
										"type": "Expression"
									},
									"adls_container": {
										"value": "@pipeline().parameters.adls_container",
										"type": "Expression"
									},
									"adls_folder": {
										"value": "@pipeline().parameters.adls_folder",
										"type": "Expression"
									},
									"adls_arc_container": {
										"value": "@pipeline().parameters.adls_arc_container",
										"type": "Expression"
									},
									"adls_arc_folder": {
										"value": "@pipeline().parameters.adls_arc_folder",
										"type": "Expression"
									},
									"target_table_schema": {
										"value": "@pipeline().parameters.target_table_schema",
										"type": "Expression"
									},
									"target_table": {
										"value": "@pipeline().parameters.target_table",
										"type": "Expression"
									},
									"target_table_load": {
										"value": "@pipeline().parameters.target_table_load",
										"type": "Expression"
									},
									"target_table_def": {
										"value": "@pipeline().parameters.target_table_def",
										"type": "Expression"
									},
									"flow_key": {
										"value": "@pipeline().parameters.flow_key",
										"type": "Expression"
									},
									"run_key": {
										"value": "@pipeline().parameters.run_key",
										"type": "Expression"
									},
									"job_key": {
										"value": "@pipeline().parameters.job_key",
										"type": "Expression"
									},
									"skip_line": {
										"value": "@pipeline().parameters.skip_line",
										"type": "Expression"
									},
									"cdc_flag": {
										"value": "@pipeline().parameters.cdc_flag",
										"type": "Expression"
									},
									"cdc_columns": {
										"value": "@pipeline().parameters.cdc_columns",
										"type": "Expression"
									},
									"isNotebook": {
										"value": "@pipeline().parameters.isNotebook",
										"type": "Expression"
									},
									"notebookPath": {
										"value": "@pipeline().parameters.notebookPath",
										"type": "Expression"
									},
									"sheet": {
										"value": "@pipeline().parameters.sheet",
										"type": "Expression"
									},
									"file_type": {
										"value": "@pipeline().parameters.file_type",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "COPY_ADLS_ARC_CSV_REFINE",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "CHECK_NOTEBOOK_FLAG",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFileName": {
											"value": "@replace(pipeline().parameters.name,'.csv','*.csv')",
											"type": "Expression"
										},
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_container",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@concat(replace(pipeline().parameters.adls_folder, 'Raw', 'Refine'), formatDateTime(utcNow(), 'yyyy/MM/dd'))",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
									"type": "DatasetReference",
									"parameters": {
										"container_name": {
											"value": "@pipeline().parameters.adls_arc_container",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@concat(replace(pipeline().parameters.adls_arc_folder, 'Raw', 'Refine'), formatDateTime(utcNow(), 'yyyy-MM-ddTHH:MM'))",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "SWITCH_SOURCE",
				"type": "Switch",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@split(pipeline().parameters.file_type,',')[0]",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "ND",
							"activities": [
								{
									"name": "CHECK_IF_FILE_EXISTS_ND",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DATASET_FILE_SYSTEM_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"folder_name": {
													"value": "@pipeline().parameters.source_folder_path",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems",
											"exists"
										],
										"storeSettings": {
											"type": "FileServerReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "FILTER_FILE_ND",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "CHECK_IF_FILE_EXISTS_ND",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('CHECK_IF_FILE_EXISTS_ND').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name, split(pipeline().parameters.name,'.')[0])",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SET_COUNT_ND",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "FILTER_FILE_ND",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "count",
										"value": {
											"value": "@string(activity('FILTER_FILE_ND').output.FilteredItemsCount)",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"value": "ADLS",
							"activities": [
								{
									"name": "CHECK_IF_FILE_EXISTS_ADLS",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DATASET_ADLS_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().parameters.adls_container",
													"type": "Expression"
												},
												"folder_name": {
													"value": "@pipeline().parameters.source_folder_path",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems",
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "FILTER_FILE_ADLS",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "CHECK_IF_FILE_EXISTS_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('CHECK_IF_FILE_EXISTS_ADLS').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name, split(pipeline().parameters.name,'.')[0])",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SET COUNT_ADLS",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "FILTER_FILE_ADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "count",
										"value": {
											"value": "@string(activity('FILTER_FILE_ADLS').output.FilteredItemsCount)",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"value": "SFTP",
							"activities": [
								{
									"name": "CHECK_IF_FILE_EXISTS_SFTP",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DATASET_SFTP_BINARY_FOLDER_UIF",
											"type": "DatasetReference",
											"parameters": {
												"sftp_path": {
													"value": "@pipeline().parameters.source_folder_path",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"childItems",
											"exists"
										],
										"storeSettings": {
											"type": "SftpReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false,
											"disableChunking": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "FILTER_FILE_SFTP",
									"type": "Filter",
									"dependsOn": [
										{
											"activity": "CHECK_IF_FILE_EXISTS_SFTP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"items": {
											"value": "@activity('CHECK_IF_FILE_EXISTS_SFTP').output.childItems",
											"type": "Expression"
										},
										"condition": {
											"value": "@contains(item().name, split(pipeline().parameters.name,'.')[0])",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SET_COUNT_SFTP",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "FILTER_FILE_SFTP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "count",
										"value": {
											"value": "@string(activity('FILTER_FILE_SFTP').output.FilteredItemsCount)",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"name": {
				"type": "string",
				"defaultValue": "Amazon_INV_POS.csv"
			},
			"source_folder_path": {
				"type": "string",
				"defaultValue": "/K-C Data Lake/POS/APAC/Country/India/Inbound/"
			},
			"adls_container": {
				"type": "string",
				"defaultValue": "globaldatalake"
			},
			"adls_folder": {
				"type": "string",
				"defaultValue": "/ExternalSources/RegionalDL/POS/APAC/India/Amazon/Raw/Data/"
			},
			"adls_arc_container": {
				"type": "string",
				"defaultValue": "globaldatalake"
			},
			"adls_arc_folder": {
				"type": "string",
				"defaultValue": "/ExternalSources/RegionalDL/POS/APAC/India/Amazon/Raw/archive/"
			},
			"target_table_schema": {
				"type": "string",
				"defaultValue": "STAGING_GBL"
			},
			"target_table": {
				"type": "string",
				"defaultValue": "RGM_AP_IN_AMAZON_INV_POS"
			},
			"target_table_load": {
				"type": "string",
				"defaultValue": "DROP_CREATE"
			},
			"target_table_def": {
				"type": "string",
				"defaultValue": "reportingDateFrom DATE, reportingDateTo DATE, distributorView VARCHAR(100), currencyCode VARCHAR(20), sellingProgramName VARCHAR(100), asin VARCHAR(100), reportingDate DATE, amount NUMBER(15,6), currencyCode_8 VARCHAR(20), netReceivedUnits NUMBER(15,6), openPurchaseOrderQuantity NUMBER(15,6), sellThroughRate NUMBER(15,6), amount_1 NUMBER(15,6), currencyCode_1 VARCHAR(20), amount_2 NUMBER(15,6), currencyCode_2 NUMBER(15,6), sellableOnHandUnits NUMBER(15,6), amount_3 NUMBER(15,6), currencyCode_3 VARCHAR(20), amount_4 NUMBER(15,6), currencyCode_4 VARCHAR(20), unsellableOnHandUnits NUMBER(15,6), amount_5 NUMBER(15,6), currencyCode_5 VARCHAR(20), amount_6 NUMBER(15,6), currencyCode_6 VARCHAR(20), aged90PlusDaysSellableUnits NUMBER(15,6), amount_7 NUMBER(15,6), currencyCode_7 VARCHAR(20), unhealthyUnitsTrailing30DayAverage NUMBER(15,6), unhealthyUnits NUMBER(15,6), unfilledCustomerOrderedUnits NUMBER(15,6), availableUnits NUMBER(15,6), weeksOnHand NUMBER(15,6), receiveFillRate NUMBER(15,6), overallVendorLeadTime NUMBER(15,6), AUDIT_LASTMODIFIEDTIME TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(), AUDIT_SOURCE VARCHAR(100) DEFAULT ''FLAT FILE'', AUDIT_SOURCEFILENAME VARCHAR(100), AUDIT_REGION VARCHAR(100) DEFAULT ''IND'', AUDIT_MARKET VARCHAR(100) DEFAULT ''AP'', DQ_Flag VARCHAR(20), DQ_Description VARCHAR(700)"
			},
			"flow_key": {
				"type": "string",
				"defaultValue": "1"
			},
			"run_key": {
				"type": "string",
				"defaultValue": "19000"
			},
			"job_key": {
				"type": "string",
				"defaultValue": "17101"
			},
			"skip_line": {
				"type": "int",
				"defaultValue": 0
			},
			"cdc_flag": {
				"type": "string",
				"defaultValue": "1"
			},
			"cdc_columns": {
				"type": "string",
				"defaultValue": "sellingProgramName,asin,reportingDate"
			},
			"isNotebook": {
				"type": "string",
				"defaultValue": "0"
			},
			"notebookPath": {
				"type": "string"
			},
			"sheet": {
				"type": "string"
			},
			"file_type": {
				"type": "string",
				"defaultValue": "SFTP,CSV"
			},
			"isDQNotebook": {
				"type": "string",
				"defaultValue": "1"
			},
			"DQNotebookPath": {
				"type": "string",
				"defaultValue": "/Users/abhijith.m@kcc.com/KC-DQ (1B)-EMAIL ALERT/KC-DQ-Runnerv2"
			},
			"recipients": {
				"type": "string",
				"defaultValue": "abhijith.m@kcc.com"
			},
			"PipelineID": {
				"type": "string",
				"defaultValue": "4444"
			},
			"target_table_db": {
				"type": "string"
			},
			"job_start": {
				"type": "string"
			}
		},
		"variables": {
			"count": {
				"type": "String"
			}
		},
		"folder": {
			"name": "UIF/FILE_LOAD_FLOW"
		},
		"annotations": []
	}
}